https://en.wikipedia.org/wiki/Integer_factorization 整数因式分解
https://en.wikipedia.org/wiki/Primality_test 素性测试

1.试除法

特殊用途
专用因式分解算法的运行时间取决于要因式分解的数字的属性或其未知因素之一：大小、特殊形式等。决定运行时间的参数因算法而异。

专用因式分解算法的一个重要子类是类别 1或第一类算法，其运行时间取决于最小质因数的大小。给定一个未知形式的整数，这些方法通常在通用方法之前应用以消除小因素。[10]例如，朴素试除法是第 1 类算法。

审判庭
车轮分解
Pollard 的 rho 算法，有两种常见的风格来识别组循环：一种是 Floyd 提出的，另一种是 Brent 提出的。
代数群分解算法，其中包括Pollard 的p  − 1 算法、Williams 的p  + 1 算法和Lenstra 椭圆曲线分解
费马因式分解方法
欧拉因式分解法
特殊数场筛
两个平方之差
通用
通用因式分解算法，也称为2 类、第二类或Kraitchik 系列算法，[10]的运行时间仅取决于要因式分解的整数的大小。这是用于分解RSA 数字的算法类型。大多数通用因式分解算法都基于平方同余法。

狄克逊分解法
连分数因式分解(CFRAC) 
https://math.osu.edu/sites/math.osu.edu/files/What_is_2018_Continued_Fraction_Factoring_Method.pdf
https://core.ac.uk/download/pdf/217142258.pdf
二次筛
理性筛
通用数域筛
Shanks 平方形式分解(SQUFOF)

其他值得注意的算法
肖尔算法，用于量子计算机


连分数 (CFRAC)迪克森的Lenstra 椭圆曲线 (ECM)欧拉的波拉德氏rhop −1p +1二次筛（QS）通用数域筛（GNFS）特殊数域筛（SNFS）理性筛费马的香克斯的方形形式审判庭绍尔的

https://trizenx.blogspot.com/2018/10/continued-fraction-factorization-method.html
然而，如今存在更快的因式分解方法，例如 二次筛法 (QS) 和数 域筛法 (NFS) 方法。
CFRAC 方法仍然具有其优点，即它是一种相当快速的方法，可以非常快速地因式分解相对较小的数字，同时易于理解和实现。


https://web.archive.org/web/20130811025532/http://ardoino.com/2008/03/large-integers-factorization/
经典算法：阅读文章大整数分解：经典算法方法
源代码
结果
Pollard P-1 算法：阅读文章大整数分解：Pollard p-1 算法/a>
源代码
结果
椭圆曲线算法：阅读文章大整数分解：数学背景和 Lenstra 分解算法
源代码,因子库
结果

https://en.wikipedia.org/wiki/Euler%27s_factorization_method 有伪代码
https://en.wikipedia.org/wiki/Pollard%27s_rho_algorithm  Pollard 的 rho 算法 有伪代码
https://en.wikipedia.org/wiki/Pollard%27s_rho_algorithm_for_logarithms Pollard 的 rho 对数算法，有代码
https://en.wikipedia.org/wiki/Pollard%27s_kangaroo_algorithm 波拉德袋鼠算法
https://en.wikipedia.org/wiki/Pollard%27s_p_%E2%88%92_1_algorithm Pollard 的p  − 1 算法
https://en.wikipedia.org/wiki/Williams%27s_p_%2B_1_algorithm  威廉姆斯的p  +1 算法
https://en.wikipedia.org/wiki/Quadratic_sieve 二次筛
https://en.wikipedia.org/wiki/Fermat%27s_factorization_method 费马因式分解方法
https://en.wikipedia.org/wiki/Shanks%27s_square_forms_factorization Shanks 的平方形式因式分解


https://en.wikipedia.org/wiki/Continued_fraction_factorization
https://en.wikipedia.org/wiki/Dixon%27s_factorization_method
https://en.wikipedia.org/wiki/Lenstra_elliptic-curve_factorization
https://en.wikipedia.org/wiki/Euler%27s_factorization_method
https://en.wikipedia.org/wiki/Pollard%27s_rho_algorithm
https://en.wikipedia.org/wiki/Pollard%27s_p_%E2%88%92_1_algorithm
https://en.wikipedia.org/wiki/Williams%27s_p_%2B_1_algorithm
https://en.wikipedia.org/wiki/Quadratic_sieve
https://en.wikipedia.org/wiki/General_number_field_sieve
https://en.wikipedia.org/wiki/Special_number_field_sieve
https://en.wikipedia.org/wiki/Rational_sieve
https://en.wikipedia.org/wiki/Fermat%27s_factorization_method
https://en.wikipedia.org/wiki/Shanks%27s_square_forms_factorization
https://en.wikipedia.org/wiki/Trial_division
https://en.wikipedia.org/wiki/Shor%27s_algorithm

D:\ee\书籍\数学\资料\t椭圆曲线资料\椭圆曲线密码体制的研究与实现.pdf
6 NFS提出

D:\ee\书籍\数学\资料\t椭圆曲线资料\应用密码学手册_Zh_CN.pdf
79 Pollard's  Rho
80 Pollard's  p-1
81 椭圆曲线因子分解
82 随机平方因子分解
83 二次筛法因子分解
85 数域筛法因子分解
108 有限域上的多项式分解

https://blog.csdn.net/c630843901/article/details/118862597 整数分解